
@using NutritionTracker.Data;
@using NutritionTracker.Models;

@inject IngredientService service

<h3>Ingredient Page</h3>

<div class="container">

    <div class="row bg-light">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Product Id</th>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Description</th>
                    <th>Delete Product</th>
                </tr>
            </thead>
            <tbody>
                @if (Ingredients.Any())
                {
                    @foreach (var ingredient in Ingredients)
                    {
                        <tr @onclick="(() => SetIngredientForUpdate(ingredient))">
                            <td>@ingredient.ingredientName</td>
                            <td>@ingredient.calories</td>
                            <td>@ingredient.fats</td>
                            <td>@ingredient.protein</td>
                            <td>@ingredient.sugar</td>
                            <td>@ingredient.carbs</td>

                            <td><button class="btn btn-danger" @onclick="(() => DeleteIngredient(ingredient))">Delete</button></td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="6"><strong>No ingredients available</strong></td></tr>
                }
            </tbody>
        </table>
    </div>

    <div class="row m-5">
        <div class="col-5 bg-light m-2 justify-content-start">

            <div class="p-3 mb-3 bg-primary text-white text-center">Add New Ingredient</div>

            <EditForm Model="@NewIngredient">
                <div class="form-group">
                    <label for="name">Ingredient Name</label>
                    <input type="text" id="name" class="form-control" @bind-value="@NewIngredient.ingredientName" />
                </div>

                <div class="form-group">
                    <label for="price">Calories</label>
                    <input type="text" id="price" class="form-control" @bind="@NewIngredient.calories" />
                </div>

                <div class="form-group">
                    <label for="quantity">Fats</label>
                    <input type="text" id="quantity" class="form-control" @bind="@NewIngredient.fats" />
                </div>

                <div class="form-group">
                    <label for="Description">Protein</label>
                    <input type="text" id="Description" class="form-control" @bind="@NewIngredient.protein" />
                </div>

                <div class="form-group">
                    <label for="Description">Sugar</label>
                    <input type="text" id="Description" class="form-control" @bind="@NewIngredient.sugar" />
                </div>

                <div class="form-group">
                    <label for="Description">Carbs</label>
                    <input type="text" id="Description" class="form-control" @bind="@NewIngredient.carbs" />
                </div>

                <div class="text-center p-3 mb-3">
                    <button class="btn btn-info" @onclick="AddNewIngredient"> Add Product</button>
                </div>
            </EditForm>
        </div>

        <div class="col-5 bg-light m-2 justify-content-end">
            <div class="p-3 mb-1 bg-primary text-white text-center">Update Ingredient</div>

            <EditForm Model="@UpdateIngredient">
                <div class="form-group">
                    <label for="name">Ingredient Name</label>
                    <input type="text" id="name" class="form-control" @bind-value="@UpdateIngredient.ingredientName" />
                </div>

                <div class="form-group">
                    <label for="price">Calories</label>
                    <input type="text" id="price" class="form-control" @bind="@UpdateIngredient.calories" />
                </div>

                <div class="form-group">
                    <label for="quantity">Fats</label>
                    <input type="text" id="quantity" class="form-control" @bind="@UpdateIngredient.fats" />
                </div>

                <div class="form-group">
                    <label for="Description">Protein</label>
                    <input type="text" id="Description" class="form-control" @bind="@UpdateIngredient.protein" />
                </div>

                <div class="form-group">
                    <label for="Description">Sugar</label>
                    <input type="text" id="Description" class="form-control" @bind="@UpdateIngredient.sugar" />
                </div>

                <div class="form-group">
                    <label for="Description">Carbs</label>
                    <input type="text" id="Description" class="form-control" @bind="@UpdateIngredient.carbs" />
                </div>

                <div class="text-center p-3 mb-3">
                    <button class="btn btn-info" @onclick="UpdateIngredientData"> Update Product</button>
                </div>

            </EditForm>
        </div>
    </div>


</div>


@code {

    List<Ingredient> Ingredients = new List<Ingredient>();

    protected override async Task OnInitializedAsync()
    {
        await RefreshIngredients();
    }

    private async Task RefreshIngredients()
    {
        Ingredients = await service.GetIngredientAsync();
    }


    public Ingredient NewIngredient { get; set; } = new Ingredient();

    private async Task AddNewIngredient()
    {
        await service.AddIngredientAsync(NewIngredient);
        NewIngredient = new Ingredient();
        await RefreshIngredients();
    }

    Ingredient UpdateIngredient = new Ingredient();
    private void SetIngredientForUpdate(Ingredient ingredient)
    {
        UpdateIngredient = ingredient;
    }

    private async Task UpdateIngredientData()
    {
        await service.UpdateIngredientAsync(UpdateIngredient);
        await RefreshIngredients();
    }

    private async Task DeleteIngredient(Ingredient ingredient)
    {
        await service.DeleteIngredientAsync(ingredient);
        await RefreshIngredients();
    }
}