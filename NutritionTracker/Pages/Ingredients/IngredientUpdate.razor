@using NutritionTracker.Data;
@using NutritionTracker.Models;
@using NutritionTracker.Pages.Ingredients.Queries;
@using NutritionTracker.Pages;

@inject MediatR.IMediator _mediatr
@inject IngredientService service

<div class="col-5 bg-light m-2 justify-content-end">
    <div class="p-3 mb-1 bg-primary text-white text-center">Update Ingredient</div>

    <EditForm Model="@UpdateIngredient">
        <div>
            <label for="name">Ingredient Name</label>
            <select tabindex="0" class="form-control" @onchange="RefreshIngredients" >

                @foreach (var ingredient in Ingredients)
                {

                    <option value="@ingredient.ingredientName" >@ingredient.ingredientName</option>

                }
            </select>
        </div>

        <div class="form-group">
            <label for="price">Calories</label>
            <input type="text" id="price" class="form-control" @bind="@UpdateIngredient.calories" />
        </div>

        <div class="form-group">
            <label for="quantity">Fats</label>
            <input type="text" id="quantity" class="form-control" @bind="@UpdateIngredient.fats" />
        </div>

        <div class="form-group">
            <label for="Description">Protein</label>
            <input type="text" id="Description" class="form-control" @bind="@UpdateIngredient.protein" />
        </div>

        <div class="form-group">
            <label for="Description">Sugar</label>
            <input type="text" id="Description" class="form-control" @bind="@UpdateIngredient.sugar" />
        </div>

        <div class="form-group">
            <label for="Description">Carbs</label>
            <input type="text" id="Description" class="form-control" @bind="@UpdateIngredient.carbs" />
        </div>

        <div class="text-center p-3 mb-3">
            <button class="btn btn-info" @onclick="UpdateIngredientData"> Update Product</button>
        </div>

    </EditForm>
</div>

@code {
    List<Ingredient> Ingredients { get; set; }
    Ingredient UpdateIngredient = new Ingredient();
    Ingredient selectedIngredient = new Ingredient();

    //*******************************************************************************
    protected override async Task OnInitializedAsync()
    {

        Ingredients = await _mediatr.Send(new IngredientListQuery());
        await SetIngredientForUpdate();
    }

    //*******************************************************************************
    private void RefreshIngredients(ChangeEventArgs args)
    {

        GetIngredientData(args);

        Console.WriteLine("Selected Ingredient name " + selectedIngredient.ingredientName);
        Console.WriteLine("Ingredient name " + UpdateIngredient.ingredientName);

    }

    //*******************************************************************************
    private void  GetIngredientData(ChangeEventArgs args)
    {
        selectedIngredient.ingredientName = args.Value.ToString();

        try
        {
            var ingredientExist = Ingredients.FirstOrDefault(o => o.ingredientName.Equals(selectedIngredient.ingredientName, StringComparison.OrdinalIgnoreCase));
            if (ingredientExist != null)
            {
                UpdateIngredient = ingredientExist;
            }
        }
        catch (Exception)
        {
            throw;
        }
    }

    //*******************************************************************************
    private async Task SetIngredientForUpdate()
    {
        selectedIngredient.ingredientName = Ingredients.FirstOrDefault().ingredientName;
        UpdateIngredient = await _mediatr.Send(new IngredientByNameQuery(selectedIngredient));
    }

    //*******************************************************************************
    private async Task Selected(ChangeEventArgs args)
    {


        selectedIngredient.ingredientName = args.Value.ToString();
        //await getIngredientData();
        UpdateIngredient = await _mediatr.Send(new IngredientByNameQuery(selectedIngredient));


        Console.WriteLine("Selected Ingredient name " + selectedIngredient.ingredientName);
        Console.WriteLine("Ingredient name " + UpdateIngredient.ingredientName);

    }

    //*******************************************************************************
    private async Task UpdateIngredientData()
    {
        await service.UpdateIngredientAsync(UpdateIngredient);
        // await RefreshIngredients();
    }
}
