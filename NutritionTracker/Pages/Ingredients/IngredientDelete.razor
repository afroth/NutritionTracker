@using NutritionTracker.Data;
@using NutritionTracker.Models;
@using MediatR;

@inject MediatR.IMediator _mediatr
@inject IngredientService service;

<div class="container">
    <div class="row bg-light">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Item Name</th>
                    <th>Calories</th>
                    <th>Fats</th>
                    <th>Protein</th>
                    <th>Sugar</th>
                    <th>Carbs</th>
                    <th>Delete Product</th>
                </tr>
            </thead>
            <tbody>
                @if (Ingredients.Any())
                {
                    @foreach (var ingredient in Ingredients)
                    {
                        <tr>
                            <td>@ingredient.ingredientName</td>
                            <td>@ingredient.calories</td>
                            <td>@ingredient.fats</td>
                            <td>@ingredient.protein</td>
                            <td>@ingredient.sugar</td>
                            <td>@ingredient.carbs</td>

                            <td><button class="btn btn-danger" @onclick="(() => DeleteIngredient(ingredient))">Delete</button></td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="6"><strong>No ingredients available</strong></td></tr>
                }
            </tbody>
        </table>
    </div>
</div>
@code {


    List<Ingredient> Ingredients = new List<Ingredient>();
    //Ingredient updateIngredient = new Ingredient();


    //onclick="(() => SetIngredientForUpdate(ingredient))"
        protected override async Task OnInitializedAsync()
            {
                await RefreshIngredients();

            }

            private async Task RefreshIngredients()
            {
                // Ingredients = await service.GetIngredientAsync();
                Ingredients = await _mediatr.Send(new IngredientQuery());
            }

            protected async Task DeleteIngredient(Ingredient ingredient)
            {
                await service.DeleteIngredientAsync(ingredient);
                //Ingredients = await _mediatr.Remove
                await RefreshIngredients();
            }

}
