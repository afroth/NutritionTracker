@using NutritionTracker.Pages.Ingredients.Services;

@inject MediatR.IMediator _mediatr
@inject IngredServices service
@inject IHttpClientFactory _clientFactory

<div class="container">
    @if (string.IsNullOrWhiteSpace(responseError) == false)
    {
        <div class="h2">@responseError</div>
    }
    else if (Ingredients == null)
    {
        <div class="h4">Loading...</div>
    }
    else
    {
        <div class="row bg-light">
            <table class="table table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th>Item Name</th>
                        <th>Calories</th>
                        <th>Fats</th>
                        <th>Protein</th>
                        <th>Sugar</th>
                        <th>Carbs</th>
                        <th>Delete Product</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Ingredients.Any())
                    {
                        @foreach (var ingredient in Ingredients)
                        {
                            <tr>
                                <td>@ingredient.ingredientName</td>
                                <td>@ingredient.calories</td>
                                <td>@ingredient.fats</td>
                                <td>@ingredient.protein</td>
                                <td>@ingredient.sugar</td>
                                <td>@ingredient.carbs</td>

                                <td><button class="btn btn-danger" @onclick="(() => DeleteIngredient(ingredient))">Delete</button></td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr><td colspan="6"><strong>No ingredients available</strong></td></tr>
                    }
                </tbody>
            </table>
        </div>
    }

</div>

