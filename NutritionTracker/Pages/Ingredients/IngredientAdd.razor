@using NutritionTracker.Models;
@using NutritionTracker.Data;
@using MediatR;
@using NutritionTracker.Pages.Ingredients.Commands;
@using Microsoft.AspNetCore.Mvc;
@using Microsoft.AspNetCore.Mvc.RazorPages;
@using Microsoft.EntityFrameworkCore;

@inject MediatR.IMediator _mediatr
@inject IngredientService service;

<div class="col-5 bg-light m-2 justify-content-start">

    <div class="p-3 mb-3 bg-primary text-white text-center">Add New Ingredient</div>

    <EditForm Model="newIngredient">
        <div class="form-group">
            <label for="name">Ingredient Name</label>
            <input type="text" id="name" class="form-control" @bind-value="@newIngredient.ingredientName" />
        </div>

        <div class="form-group">
            <label for="price">Calories</label>
            <input type="text" id="price" class="form-control" @bind="@newIngredient.calories" />
        </div>

        <div class="form-group">
            <label for="quantity">Fats</label>
            <input type="text" id="quantity" class="form-control" @bind="@newIngredient.fats" />
        </div>

        <div class="form-group">
            <label for="Description">Protein</label>
            <input type="text" id="Description" class="form-control" @bind="@newIngredient.protein" />
        </div>

        <div class="form-group">
            <label for="Description">Sugar</label>
            <input type="text" id="Description" class="form-control" @bind="@newIngredient.sugar" />
        </div>

        <div class="form-group">
            <label for="Description">Carbs</label>
            <input type="text" id="Description" class="form-control" @bind="@newIngredient.carbs" />
        </div>

        <div class="text-center p-3 mb-3">
            <button class="btn btn-info" @onclick="AddNewIngredient"> Add Product</button>
        </div>
    </EditForm>
</div>



@code {
    // List<Ingredient> Ingredients = new List<Ingredient>();

    // protected override async Task OnInitializedAsync()
    //  {
    //     await RefreshIngredients();
    // }

    //  private async Task RefreshIngredients()
    // {
    //      Ingredients = await service.GetIngredientAsync();
    //  }


    public Ingredient newIngredient { get; set; } = new Ingredient();

    private async Task AddNewIngredient()
    {

        // await service.AddIngredientAsync(NewIngredient);
        await _mediatr.Send(newIngredient);
        newIngredient = new Ingredient();
        // await RefreshIngredients();
    }
}
